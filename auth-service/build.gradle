plugins {
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.1.1'
}

group = 'com.coungard'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.4")
    set('mapstructVersion', '1.5.3.Final')

//    generatedMapperSourcesDir = "${buildDir}/generated-src/mapstruct/main"
}


dependencies {
    implementation 'org.liquibase:liquibase-core'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    //Liquibase
    liquibaseRuntime('org.liquibase:liquibase-core:4.18.0')
    liquibaseRuntime('org.liquibase:liquibase-groovy-dsl:3.0.2')
    liquibaseRuntime("org.postgresql:postgresql")
//    liquibaseRuntime('org.liquibase.ext:liquibase-hibernate5:4.18.0')
//    liquibaseRuntime('info.picocli:picocli:4.6.3')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs += [
        '-Amapstruct.suppressGeneratorTimestamp=true',
        '-Amapstruct.suppressGeneratorVersionInfoComment=true',
        '-Amapstruct.verbose=true'
    ]
}

liquibase {
    activities {
        main {
            changeLogFile "src/main/resources/db/changelog/db.changelog-master.xml"
            url "jdbc:postgresql://localhost:5433/delivery_club"
            username "postgres"
            password "postgres"
        }
    }
}
